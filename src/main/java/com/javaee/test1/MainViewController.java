/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package com.javaee.test1;

//import java.io.IOException;
//import java.util.ArrayList;
//import java.util.List;
//import java.util.Optional;
//import com.javaee.test1.controllers.UserDAO;
//import javafx.scene.control.Label;
//import com.javaee.test1.controllers.ChatMessageDAO;
//import com.javaee.test1.controllers.UserDAO;
//import com.javaee.test1.models.ChatMessage;
//import javafx.animation.Animation;
//import javafx.animation.KeyFrame;
//import javafx.animation.ScaleTransition;
//import javafx.animation.Timeline;
//import javafx.application.Platform;
//import javafx.fxml.FXML;
//import javafx.geometry.Insets;
//import javafx.geometry.Pos;
//import javafx.scene.control.*;
//import javafx.scene.image.ImageView;
//import javafx.scene.input.MouseEvent;
//import javafx.scene.layout.Region;
//import javafx.scene.layout.VBox;
//import javafx.scene.paint.Color;
//import javafx.scene.text.TextFlow;
//import javafx.util.Duration;
//import org.json.JSONObject;
//
//import java.io.BufferedReader;
//import java.io.IOException;
//import java.io.InputStream;
//import java.io.InputStreamReader;
//import java.net.URI;
//import java.net.http.HttpClient;
//import java.net.http.HttpRequest;
//import java.net.http.HttpResponse;
//import java.text.SimpleDateFormat;
//import java.time.format.DateTimeFormatter;
//import java.util.*;
//import java.util.concurrent.CompletableFuture;
//import java.util.regex.Matcher;
//import java.util.regex.Pattern;
//import javafx.fxml.FXMLLoader;
//import javafx.scene.Parent;
//import javafx.scene.Scene;
//import javafx.scene.text.Text;
//import javafx.stage.Stage;
/// /ƒë·ªïi ten theo controller c·ªßa t·ª´ng c√°i
//import com.javaee.test1.DoiThongTinCaNhan;
//import com.javaee.test1.DoiTenCuocHoiThoaiController;
/// /import com.javaee.test1.controllers.DeleteConversationController;
//import com.javaee.test1.NangCapController;

import com.javaee.test1.controllers.UserDAO;
import com.javaee.test1.controllers.UserSession;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.input.MouseEvent;
import javafx.scene.layout.HBox;
import javafx.scene.layout.Priority;
import javafx.scene.layout.VBox;
import javafx.scene.paint.Color;
import javafx.scene.shape.Circle;
import javafx.stage.Modality;
import javafx.stage.Stage;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;
import java.util.UUID;

// Import controller theo t·ª´ng ch·ª©c nƒÉng

/**
 * @author dokie
 */
public class MainViewController {

    UserDAO userDAO = new UserDAO();
    UserSession session = UserSession.getInstance();
    private List<String> historyList = new ArrayList<>();
    @FXML
    private Label labelNangcap;
    @FXML
    private Label labelXoahoithoai; // Label n√∫t x√≥a
    @FXML
    private Label labelLogout;
    @FXML
    private Label labelLichsutrochuyen;
    @FXML
    private VBox conversationCon;
    @FXML
    private Label txtTenND;
    @FXML
    private Label txtTaiKhoanND;
    @FXML
    private ImageView imgAvatar;
    //g√°n s·ª± ki·ªán cho t·ª´ng n√∫t
    private String saveTitle;

    private void loadUserInfo() {
        // L·∫•y th√¥ng tin t·ª´ UserSession
        UserSession userSession = UserSession.getInstance();
        UUID userId = userSession.getUserId();

        if (userId == null) {
            showAlert("L·ªói", "Kh√¥ng t√¨m th·∫•y th√¥ng tin ng∆∞·ªùi d√πng t·ª´ phi√™n ƒëƒÉng nh·∫≠p!", Alert.AlertType.ERROR);
            return;
        }
        // C·∫≠p nh·∫≠t t√™n v√† lo·∫°i t√†i kho·∫£n t·ª´ UserSession l√™n giao di·ªán
        txtTenND.setText(userSession.getUsername() != null ? userSession.getUsername() : "Ch∆∞a c√≥ t√™n");
        txtTaiKhoanND.setText(userSession.getSubscriptionPlan() != null ? userSession.getSubscriptionPlan() : "Kh√¥ng x√°c ƒë·ªãnh");

        // Hi·ªÉn th·ªã avatar t·ª´ UserSession (n·∫øu c√≥)
        String avatarPath = userSession.getAvatar();
        if (avatarPath != null && !avatarPath.isEmpty()) {
            try {
                File avatarFile = new File(avatarPath);
                if (avatarFile.exists()) {
                    Image avatarImage = new Image(avatarFile.toURI().toString());
                    imgAvatar.setImage(avatarImage);

                    // üìå CƒÉn ·∫£nh s√°t tr√°i
                    imgAvatar.setPreserveRatio(true);  // Gi·ªØ t·ª∑ l·ªá ·∫£nh
                    imgAvatar.setFitWidth(55);        // ƒêi·ªÅu ch·ªânh chi·ªÅu r·ªông
                    imgAvatar.setFitHeight(55);       // ƒêi·ªÅu ch·ªânh chi·ªÅu cao
                    imgAvatar.setSmooth(true);        // L√†m m·ªãn ·∫£nh
                    imgAvatar.setCache(true);         // TƒÉng hi·ªáu su·∫•t load ·∫£nh

                    imgAvatar.setTranslateX(500); // Di chuy·ªÉn ·∫£nh sang tr√°i (√¢m l√† tr√°i, d∆∞∆°ng l√† ph·∫£i)
                    imgAvatar.setTranslateY(0);   // Di chuy·ªÉn ·∫£nh xu·ªëng d∆∞·ªõi (√¢m l√† l√™n tr√™n, d∆∞∆°ng l√† xu·ªëng d∆∞·ªõi)

                    // üìå L√†m tr√≤n avatar
                    Circle clip = new Circle(25, 25, 25); // T·∫°o clip h√¨nh tr√≤n (b√°n k√≠nh 25px)
                    imgAvatar.setClip(clip); // ƒê·∫∑t h√¨nh c·∫Øt tr√≤n v√†o avatar

                    // üìå N·∫øu imgAvatar n·∫±m trong HBox, cƒÉn s√°t tr√°i
                    HBox.setHgrow(imgAvatar, Priority.NEVER);
                    imgAvatar.setTranslateX(-10); // D·ªãch ·∫£nh v·ªÅ b√™n tr√°i (t√πy ch·ªânh)

                } else {
                    showAlert("L·ªói", "Kh√¥ng t√¨m th·∫•y t·ªáp ·∫£nh ƒë·∫°i di·ªán!", Alert.AlertType.ERROR);
                }
            } catch (Exception e) {
                e.printStackTrace();
                showAlert("L·ªói", "Kh√¥ng th·ªÉ t·∫£i ·∫£nh ƒë·∫°i di·ªán!", Alert.AlertType.ERROR);
            }
        }

    }

    private void showAlert(String title, String content, Alert.AlertType type) {
        Alert alert = new Alert(type);
        alert.setTitle(title);
        alert.setHeaderText(null);
        alert.setContentText(content);
        alert.showAndWait();
    }

    @FXML
    private void initialize() {
        loadUserInfo(); // G·ªçi loadUserInfo() khi view ƒë∆∞·ª£c hi·ªÉn th·ªã
        //g√°n s·ª± ki·ªán b·∫•m v√†o label n√¢ng c·∫•p chuy·ªÉn sang trang n√¢ng c·∫•p g√≥i
        labelNangcap.setOnMouseClicked(event -> openUpgradePlan());

        //g√°n s·ª± ki·ªán cho x√≥a h·∫øt cu·ªôc h·ªôi tho·∫°i
        labelXoahoithoai.setOnMouseClicked(event -> deleteAllConversations());

        labelLogout.setOnMouseClicked(event -> handleLogout(event));
    }

    //===========================================================================
    //b·∫•m v√†o button avatar th√¨ chuy·ªÉn sang trang  tr·ªânh s·ª≠a th√¥ng tin c√° nh√¢n
    @FXML
    private void openEditProfile() {
        try {
            FXMLLoader loader = new FXMLLoader(getClass().getResource("/com/javaee/test1/Thongtincanhan.fxml"));
            Parent root = loader.load();

            // L·∫•y stage hi·ªán t·∫°i t·ª´ button avatar
            Stage stage = (Stage) imgAvatar.getScene().getWindow();

            // C·∫≠p nh·∫≠t scene v·ªõi root m·ªõi
            stage.setScene(new Scene(root));
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    //====================================================================================================================================
//    //Click v√†o h·ªôi tho·∫°i chuy√™n sang ƒë·ªïi t√™n h·ªôi tho·∫°i v√† x√≥a h·ªôi tho·∫°i
    @FXML
    private void handleClick() {
        Alert alert = new Alert(Alert.AlertType.CONFIRMATION);
        alert.setTitle("Ch·ªçn h√†nh ƒë·ªông");
        alert.setHeaderText("B·∫°n mu·ªën l√†m g√¨??");
        alert.setContentText("Ch·ªçn m·ªôt trong hai h√†nh ƒë·ªông b√™n d∆∞·ªõi:");

        ButtonType renameOption = new ButtonType("ƒê·ªïi t√™n h·ªôi tho·∫°i");
        ButtonType deleteOption = new ButtonType("X√≥a h·ªôi tho·∫°i");
        ButtonType cancelOption = new ButtonType("H·ªßy", ButtonBar.ButtonData.CANCEL_CLOSE);
        alert.getButtonTypes().setAll(renameOption, deleteOption, cancelOption);

        Optional<ButtonType> result = alert.showAndWait();
        if (result.isPresent()) {
            if (result.get() == renameOption) {
                openRenameConversation();
            } else if (result.get() == deleteOption) {
                openDeleteConversation();
            }
        }
    }

    // M·ªü c·ª≠a s·ªï ƒë·ªïi t√™n h·ªôi tho·∫°i
    private void openRenameConversation() {
        openWindow("/com/javaee/test1/Thongbaodoiten.fxml", "ƒê·ªïi t√™n h·ªôi tho·∫°i");
    }

    // M·ªü c·ª≠a s·ªï x√≥a h·ªôi tho·∫°i
    private void openDeleteConversation() {
        openWindow("/com/javaee/test1/Thongbaoxoacuoctrochuyen.fxml", "X√≥a h·ªôi tho·∫°i");
    }

    // H√†m d√πng chung ƒë·ªÉ m·ªü c·ª≠a s·ªï
    private void openWindow(String fxmlPath, String title) {
        try {
            FXMLLoader loader = new FXMLLoader(getClass().getResource(fxmlPath));
            Parent root = loader.load();
            Stage stage = new Stage();
            stage.setTitle(title);
            stage.setScene(new Scene(root));
            stage.initModality(Modality.APPLICATION_MODAL); // ƒê·∫∑t ch·∫ø ƒë·ªô MODAL
            stage.showAndWait(); // Ch·ªù ng∆∞·ªùi d√πng thao t√°c xong
        } catch (IOException e) {
            showError("L·ªói m·ªü c·ª≠a s·ªï", "Kh√¥ng th·ªÉ t·∫£i giao di·ªán: " + fxmlPath);
            e.printStackTrace();
        }
    }

    // Hi·ªÉn th·ªã th√¥ng b√°o l·ªói
    private void showError(String title, String message) {
        Alert errorAlert = new Alert(Alert.AlertType.ERROR);
        errorAlert.setTitle(title);
        errorAlert.setHeaderText(null);
        errorAlert.setContentText(message);
        errorAlert.showAndWait();
    }

    //clik v√†o s·∫Ω chuy·ªÉn sang trang n√¢ng c·∫•p node
    @FXML
    private void openUpgradePlan() {
        System.out.println("Label N√¢ng c·∫•p ƒë√£ ƒë∆∞·ª£c click!"); // Debug

        try {
            FXMLLoader loader = new FXMLLoader(getClass().getResource("/com/javaee/test1/Nanngcap.fxml"));
            Parent root = loader.load();

            Stage stage = new Stage();
            stage.setTitle("N√¢ng c·∫•p g√≥i");
            stage.setScene(new Scene(root));
            stage.show();

            System.out.println("C·ª≠a s·ªï n√¢ng c·∫•p ƒë√£ m·ªü!"); // Debug
        } catch (IOException e) {
            System.out.println("L·ªói khi m·ªü trang n√¢ng c·∫•p: " + e.getMessage());
            e.printStackTrace();
        }
    }

    //=======================================
    //log out
    @FXML

    private void handleLogout(MouseEvent event) {
        System.out.println("Label ƒêƒÉng xu·∫•t ƒë√£ ƒë∆∞·ª£c click!"); // Debug

        try {
            FXMLLoader loader = new FXMLLoader(getClass().getResource("/com/javaee/test1/nutdangxuat.fxml")); // ƒê√∫ng file c·∫ßn m·ªü
            Parent root = loader.load();

            Stage stage = (Stage) ((javafx.scene.Node) event.getSource()).getScene().getWindow(); // L·∫•y stage hi·ªán t·∫°i
            stage.setTitle("ƒêƒÉng xu·∫•t");
            stage.setScene(new Scene(root));
            stage.show();

            System.out.println("Chuy·ªÉn ƒë·∫øn m√†n h√¨nh ƒêƒÉng xu·∫•t th√†nh c√¥ng!"); // Debug
        } catch (IOException e) {
            System.out.println("L·ªói khi m·ªü trang ƒêƒÉng xu·∫•t: " + e.getMessage());
            e.printStackTrace();
        }
    }


    //delete all
    @FXML
    private void deleteAllConversations() {
        Alert alert = new Alert(Alert.AlertType.CONFIRMATION);
        alert.setTitle("X√°c nh·∫≠n x√≥a");
        alert.setHeaderText("B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a t·∫•t c·∫£ cu·ªôc h·ªôi tho·∫°i kh√¥ng?");
        alert.setContentText("H√†nh ƒë·ªông n√†y kh√¥ng th·ªÉ ho√†n t√°c!");

        Optional<ButtonType> result = alert.showAndWait();
        if (result.isPresent() && result.get() == ButtonType.OK) {
            historyList.clear(); // X√≥a h·∫øt danh s√°ch h·ªôi tho·∫°i
            System.out.println("T·∫•t c·∫£ h·ªôi tho·∫°i ƒë√£ b·ªã x√≥a!");

            // C·∫≠p nh·∫≠t l·∫°i giao di·ªán
            updateUIAfterDelete();
        }
    }
// H√†m c·∫≠p nh·∫≠t giao di·ªán sau khi x√≥a h·ªôi tho·∫°i

    private void updateUIAfterDelete() {
        labelLichsutrochuyen.setText("Kh√¥ng c√≥ cu·ªôc h·ªôi tho·∫°i n√†o"); // C·∫≠p nh·∫≠t label
    }

    /// / th√™m cu·ªôc tr√≤ chuy·ªán
//    @FXML
//    private void startNewConversation() {
//        // L·∫•y n·ªôi dung cu·ªôc tr√≤ chuy·ªán hi·ªán t·∫°i
//        String currentConversation = getCurrentConversation();
//
//        // Ki·ªÉm tra xem cu·ªôc tr√≤ chuy·ªán c√≥ n·ªôi dung kh√¥ng tr∆∞·ªõc khi l∆∞u v√†o l·ªãch s·ª≠
//        if (currentConversation != null && !currentConversation.trim().isEmpty()) {
//            historyList.add(currentConversation);
//        }
//
//        // Hi·ªÉn th·ªã l·ªãch s·ª≠ cu·ªôc tr√≤ chuy·ªán
//        showHistory();
//    }
//
//    @FXML
//    private void showHistory() {
//        if (historyList.isEmpty()) {
//            labelLichsutrochuyen.setText("Kh√¥ng c√≥ cu·ªôc h·ªôi tho·∫°i n√†o");
//        } else {
//            StringBuilder sb = new StringBuilder();
//            for (String convo : historyList) {
//                sb.append(convo).append("\n");
//            }
//            labelLichsutrochuyen.setText(sb.toString());
//        }
//    }
    @FXML
    private void startNewConversation() {
        // L·∫•y n·ªôi dung cu·ªôc tr√≤ chuy·ªán hi·ªán t·∫°i
        String currentConversation = getCurrentConversation();

        // Ki·ªÉm tra xem cu·ªôc tr√≤ chuy·ªán c√≥ n·ªôi dung kh√¥ng tr∆∞·ªõc khi l∆∞u v√†o l·ªãch s·ª≠
        if (currentConversation != null && !currentConversation.trim().isEmpty()) {
            historyList.add(0, currentConversation); // Th√™m v√†o ƒë·∫ßu danh s√°ch thay v√¨ cu·ªëi
        }

        // Hi·ªÉn th·ªã l·ªãch s·ª≠ cu·ªôc tr√≤ chuy·ªán
        showHistory();
    }

    @FXML
    private void showHistory() {
        if (historyList.isEmpty()) {
            labelLichsutrochuyen.setText("Kh√¥ng c√≥ cu·ªôc h·ªôi tho·∫°i n√†o");
        } else {
            StringBuilder sb = new StringBuilder();
            for (String convo : historyList) {
                sb.append(convo).append("\n");
            }
            labelLichsutrochuyen.setText(sb.toString()); // Hi·ªÉn th·ªã theo th·ª© t·ª± m·ªõi nh·∫•t ·ªü tr√™n
        }
    }

    //==================================================================================================
    @FXML
    private String getCurrentConversation() {
        // L·∫•y n·ªôi dung chat hi·ªán t·∫°i (t√πy v√†o b·∫°n hi·ªÉn th·ªã message nh∆∞ n√†o)
        // V√≠ d·ª•:
        return "Cu·ªôc tr√≤ chuy·ªán " + (historyList.size() + 1);
    }

    public void loadConversations(UUID userId) {
        ArrayList<String> conversationNames = userDAO.loadConversation(userId);
        conversationCon.getChildren().clear();
        for (String title : conversationNames) {
            Label conversationLabel = new Label(title);
            ImageView imageView1 = new ImageView(getClass().getResource("/img/Item.png").toExternalForm());
            ImageView imageView2 = new ImageView(getClass().getResource("/img/buttonpick.png").toExternalForm());

            conversationLabel.setTextFill(Color.WHITE);
            conversationLabel.setGraphic(imageView1);
            conversationLabel.setContentDisplay(ContentDisplay.LEFT);
            conversationLabel.setGraphicTextGap(10);
            conversationLabel.setStyle("-fx-padding: 10px; -fx-font-size: 14px;");

            conversationLabel.setOnMouseEntered(event -> {
                conversationLabel.setGraphic(imageView2);
                conversationLabel.setContentDisplay(ContentDisplay.RIGHT);
            });

            conversationLabel.setOnMouseExited(event -> {
                conversationLabel.setGraphic(imageView1);
                conversationLabel.setContentDisplay(ContentDisplay.LEFT);
            });

//            conversationLabel.setOnMouseClicked(event -> {
//                saveTitle = conversationLabel.getText();
//                loadChatHistory(userDAO.getConversationIdByTitle(saveTitle));
//
//                System.out.println(saveTitle);
//            });
            conversationCon.getChildren().add(conversationLabel);
        }

    }
}
