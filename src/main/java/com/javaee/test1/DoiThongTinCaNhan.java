/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package com.javaee.test1;

import com.javaee.test1.controllers.UserDAO;
import com.javaee.test1.controllers.UserSession;
import com.javaee.test1.models.User;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.layout.HBox;
import javafx.scene.layout.Priority;
import javafx.scene.shape.Circle;
import javafx.stage.Stage;

import java.io.File;
import java.io.IOException;
import java.util.Optional;
import java.util.UUID;

/**
 * @author xinch
 */
public class DoiThongTinCaNhan {

    @FXML
    private TextField txtEmailMoi;
    @FXML
    private TextField txtEmailCu;
    @FXML
    private TextField txtUsername;
    @FXML
    private PasswordField txtCurrentPassword;
    @FXML
    private PasswordField txtNewPassword;
    @FXML
    private PasswordField txtConfirmPassword;
    @FXML
    private Button btnLuuThayDoi;
    @FXML
    private Button btnLuuVaXacMinh;
    @FXML
    private Button btnXoaNguoiDungNew;
    @FXML
    private ImageView imgAvatar;
    @FXML
    private Label txtTenND;
    @FXML
    private Label txtTaiKhoanND;

    //    private UserDAO userDAO = new UserDAO();
//    private UUID userId;
//    private User user;
//
//    public void setUserId(UUID id) {
//        this.userId = id;
//        this.user = userDAO.getUserById(id); // L·∫•y user t·ª´ database n·∫øu ch∆∞a c√≥
//        loadUserInfo();
//    }
//
//    // ‚úÖ Load th√¥ng tin ng∆∞·ªùi d√πng khi m·ªü form
//    private void loadUserInfo() {
//
//        if (user != null) {
//            txtEmailMoi.setText(user.getEmail());
//            txtUsername.setText(user.getUsername());
//        }
//    }
    private UUID userId;
    private User user;
    private UserDAO userDAO = new UserDAO();

    // ‚úÖ G√°n userId t·ª´ user (n·∫øu c√≥), n·∫øu kh√¥ng th√¨ l·∫•y t·ª´ database
    public void setUserId(UUID id) {
        if (id == null) {
            showAlert("L·ªói", "ID ng∆∞·ªùi d√πng kh√¥ng h·ª£p l·ªá!", Alert.AlertType.ERROR);
            return;
        }

        this.userId = id;
        this.user = userDAO.getUserById(id);

        if (this.user == null) {
            showAlert("L·ªói", "Kh√¥ng t√¨m th·∫•y th√¥ng tin ng∆∞·ªùi d√πng!", Alert.AlertType.ERROR);
        } else {
            loadUserInfo();
        }
    }

    @FXML
    public void initialize() {
        loadUserInfo(); // G·ªçi loadUserInfo() khi view ƒë∆∞·ª£c hi·ªÉn th·ªã
    }

    private void loadUserInfo() {
        // L·∫•y th√¥ng tin t·ª´ UserSession
        UserSession userSession = UserSession.getInstance();
        UUID userId = userSession.getUserId();

        if (userId == null) {
            showAlert("L·ªói", "Kh√¥ng t√¨m th·∫•y th√¥ng tin ng∆∞·ªùi d√πng t·ª´ phi√™n ƒëƒÉng nh·∫≠p!!", Alert.AlertType.ERROR);
            return;
        }
        // C·∫≠p nh·∫≠t t√™n v√† lo·∫°i t√†i kho·∫£n t·ª´ UserSession l√™n giao di·ªán
        txtTenND.setText(userSession.getUsername() != null ? userSession.getUsername() : "Ch∆∞a c√≥ t√™n");
        txtTaiKhoanND.setText(userSession.getSubscriptionPlan() != null ? userSession.getSubscriptionPlan() : "Kh√¥ng x√°c ƒë·ªãnh");

        // Hi·ªÉn th·ªã avatar t·ª´ UserSession (n·∫øu c√≥)
        String avatarPath = userSession.getAvatar();
        if (avatarPath != null && !avatarPath.isEmpty()) {
            try {
                File avatarFile = new File(avatarPath);
                if (avatarFile.exists()) {
                    Image avatarImage = new Image(avatarFile.toURI().toString());
                    imgAvatar.setImage(avatarImage);

                    // üìå CƒÉn ·∫£nh s√°t tr√°i
                    imgAvatar.setPreserveRatio(true);  // Gi·ªØ t·ª∑ l·ªá ·∫£nh
                    imgAvatar.setFitWidth(55);        // ƒêi·ªÅu ch·ªânh chi·ªÅu r·ªông
                    imgAvatar.setFitHeight(55);       // ƒêi·ªÅu ch·ªânh chi·ªÅu cao
                    imgAvatar.setSmooth(true);        // L√†m m·ªãn ·∫£nh
                    imgAvatar.setCache(true);         // TƒÉng hi·ªáu su·∫•t load ·∫£nh

                    imgAvatar.setTranslateX(500); // Di chuy·ªÉn ·∫£nh sang tr√°i (√¢m l√† tr√°i, d∆∞∆°ng l√† ph·∫£i)
                    imgAvatar.setTranslateY(0);   // Di chuy·ªÉn ·∫£nh xu·ªëng d∆∞·ªõi (√¢m l√† l√™n tr√™n, d∆∞∆°ng l√† xu·ªëng d∆∞·ªõi)

                    // üìå L√†m tr√≤n avatar
                    Circle clip = new Circle(25, 25, 25); // T·∫°o clip h√¨nh tr√≤n (b√°n k√≠nh 25px)
                    imgAvatar.setClip(clip); // ƒê·∫∑t h√¨nh c·∫Øt tr√≤n v√†o avatar

                    // üìå N·∫øu imgAvatar n·∫±m trong HBox, cƒÉn s√°t tr√°i
                    HBox.setHgrow(imgAvatar, Priority.NEVER);
                    imgAvatar.setTranslateX(-10); // D·ªãch ·∫£nh v·ªÅ b√™n tr√°i (t√πy ch·ªânh)

                } else {
                    showAlert("L·ªói", "Kh√¥ng t√¨m th·∫•y t·ªáp ·∫£nh ƒë·∫°i di·ªán!", Alert.AlertType.ERROR);
                }
            } catch (Exception e) {
                e.printStackTrace();
                showAlert("L·ªói", "Kh√¥ng th·ªÉ t·∫£i ·∫£nh ƒë·∫°i di·ªán!", Alert.AlertType.ERROR);
            }
        }

    }

    // ‚úÖ C·∫≠p nh·∫≠t Email khi b·∫•m "L∆∞u v√† X√°c Minh"
    @FXML
    private void luuVaXacMinhEmail() {
        String oldEmail = txtEmailCu.getText().trim();
        String newEmail = txtEmailMoi.getText().trim();

        // Ki·ªÉm tra email h·ª£p l·ªá
        if (newEmail.isEmpty() || !newEmail.contains("@")) {
            showAlert("L·ªói", "Vui l√≤ng nh·∫≠p ƒë·ªãa ch·ªâ email m·ªõi h·ª£p l·ªá!", Alert.AlertType.ERROR);
            return;
        }

        if (oldEmail.isEmpty() || !oldEmail.contains("@")) {
            showAlert("L·ªói", "Vui l√≤ng nh·∫≠p ƒë·ªãa ch·ªâ email c≈© h·ª£p l·ªá!", Alert.AlertType.ERROR);
            return;
        }

        // Ki·ªÉm tra email c≈© c√≥ ƒë√∫ng kh√¥ng
        if (!userDAO.checkEmailExists(oldEmail)) {
            showAlert("L·ªói", "Email c≈© kh√¥ng t·ªìn t·∫°i trong h·ªá th·ªëng!", Alert.AlertType.ERROR);
            return;
        }

        // C·∫≠p nh·∫≠t email trong database
        if (userDAO.updateEmail(oldEmail, newEmail)) {
            showAlert("Th√†nh c√¥ng", "Email ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t!", Alert.AlertType.INFORMATION);
        } else {
            showAlert("L·ªói", "Kh√¥ng th·ªÉ c·∫≠p nh·∫≠t email. Vui l√≤ng th·ª≠ l·∫°i!", Alert.AlertType.ERROR);
        }
    }

    // ‚úÖ C·∫≠p nh·∫≠t Username v√† M·∫≠t kh·∫©u khi b·∫•m "L∆∞u Thay ƒê·ªïi"
    @FXML
    private void luuThayDoi() {
        String user = txtUsername.getText().trim();
        String currentPassword = txtCurrentPassword.getText().trim();
        String newPassword = txtNewPassword.getText().trim();
        String confirmPassword = txtConfirmPassword.getText().trim();

        if (user.isEmpty()) {
            showAlert("L·ªói", "Vui l√≤ng nh·∫≠p username", Alert.AlertType.ERROR);
            return;
        }

//    // L·∫•y username theo email t·ª´ database
//    String username = userDAO.getUsernameByEmail(user);
//    if (username == null) {
//        showAlert("L·ªói", "Email kh√¥ng t·ªìn t·∫°i!", Alert.AlertType.ERROR);
//        return;
//    }
        // Ki·ªÉm tra x√°c nh·∫≠n m·∫≠t kh·∫©u m·ªõi
        if (!newPassword.equals(confirmPassword)) {
            showAlert("L·ªói", "M·∫≠t kh·∫©u m·ªõi kh√¥ng kh·ªõp!", Alert.AlertType.ERROR);
            return;
        }

        // Ki·ªÉm tra m·∫≠t kh·∫©u c≈© c√≥ ƒë√∫ng kh√¥ng
        if (!userDAO.isOldPasswordCorrectuser(user, currentPassword)) {
            showAlert("L·ªói", "M·∫≠t kh·∫©u hi·ªán t·∫°i kh√¥ng ƒë√∫ng!", Alert.AlertType.ERROR);
            return;
        }

        // C·∫≠p nh·∫≠t m·∫≠t kh·∫©u
        if (userDAO.updatePassworduser(user, newPassword)) {
            showAlert("Th√†nh c√¥ng", "M·∫≠t kh·∫©u ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t!", Alert.AlertType.INFORMATION);
        } else {
            showAlert("L·ªói", "Kh√¥ng th·ªÉ ƒë·ªïi m·∫≠t kh·∫©u. Vui l√≤ng th·ª≠ l·∫°i!", Alert.AlertType.ERROR);
        }
    }

    private void showAlert(String title, String content, Alert.AlertType type) {
        Alert alert = new Alert(type);
        alert.setTitle(title);
        alert.setHeaderText(null);
        alert.setContentText(content);
        alert.showAndWait();
    }

    @FXML
    private void xoaNguoiDung() {
        UUID userId = UserSession.getInstance().getUserId(); // ‚ûú L·∫•y UserID t·ª´ UserSession

        if (userId == null) {
            showAlert("L·ªói", "Kh√¥ng t√¨m th·∫•y th√¥ng tin t√†i kho·∫£n!", Alert.AlertType.ERROR);
            return;
        }

        // X√°c nh·∫≠n tr∆∞·ªõc khi x√≥a
        Alert confirmDialog = new Alert(Alert.AlertType.CONFIRMATION);
        confirmDialog.setTitle("X√°c nh·∫≠n x√≥a");
        confirmDialog.setHeaderText(null);
        confirmDialog.setContentText("B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a t√†i kho·∫£n n√†y? H√†nh ƒë·ªông n√†y kh√¥ng th·ªÉ ho√†n t√°c!");

        Optional<ButtonType> result = confirmDialog.showAndWait();
        if (result.isPresent() && result.get() == ButtonType.OK) {
            boolean success = userDAO.deleteUserById(userId);

            if (success) {
                showAlert("Th√†nh c√¥ng", "T√†i kho·∫£n c·ªßa b·∫°n ƒë√£ b·ªã x√≥a!", Alert.AlertType.INFORMATION);

                // ‚ûú X√≥a session v√† chuy·ªÉn h∆∞·ªõng v·ªÅ m√†n h√¨nh ƒëƒÉng nh·∫≠p
                UserSession.getInstance().clearSession();
                redirectToLogin();
            } else {
                showAlert("L·ªói", "Kh√¥ng th·ªÉ x√≥a t√†i kho·∫£n!", Alert.AlertType.ERROR);
            }
        }
    }
// Chuy·ªÉn h∆∞·ªõng v·ªÅ m√†n h√¨nh ƒëƒÉng nh·∫≠p

    private void redirectToLogin() {
        try {
            FXMLLoader loader = new FXMLLoader(App.class.getResource("login.fxml"));
            Parent root = loader.load();
            Stage stage = (Stage) btnXoaNguoiDungNew.getScene().getWindow();
            stage.setScene(new Scene(root));
            stage.centerOnScreen();
            stage.show();
        } catch (IOException e) {
            e.printStackTrace();
            showAlert("L·ªói", "Kh√¥ng th·ªÉ chuy·ªÉn v·ªÅ m√†n h√¨nh ƒëƒÉng nh·∫≠p!", Alert.AlertType.ERROR);
        }
    }

}
